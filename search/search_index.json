{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Physical Starlight and Atmosphere \"Physical Starlight and Atmosphere\" is a Blender addon for advanced environmental lighting that takes inspiration of 'sandbox' game world and editors like Unity or Unreal Engine. The goal of the addon is to provide high quality atmospherics and lighting and bring visual consistency between every object in your scene. As of now it is still in active development and I am working hard to make it the highest quality product. Why use it? very high dynamic range. Made to be used with tone mapping (filmic, or aces) made for PBR and HDR workflow consistent results - sunlight, sky and fog share the same shaders, code and parameters very memory efficient, does not consume video memory - works great on integrated GPUs performance - loads much quicker and renders faster than HDRI textures flexibility - simulate any planetary weather conditions fully procedural - can simulate unlimited number of sky conditions instant results - one click away to a beautiful render it's yours - free to dissect the setup, re-arrange it for your needs How does it work? This addon \"fills\" your Blender scene with air (or any gas of your liking) where density at the ground level is the highest and in the space - lowest, then a Star of your choice illuminates the air using physics laws - easy as that! Lighting is calculated based on Rayleigh and Mie theory of light scattering through gaseous and liquid medium. Most critical part of the calculation is the fog - like in real world, it changes based on altitude of observer. Although my work is based on physical functions and scientific research, my usual approach is to stick with what looks right. That's why there are some 'artistic' liberties taken (or manually fitted values based on reference images) to make it stand out from the crowd. Motivation Outdoor lighting in is essential in computer graphics and Blender still has no proper skylight system available. Preetham and Hosek-Wilkie sky included in Blender is very rudimentary and practically unusable. Even skylight systems in other software suites are very limited. A common practice in almost all of CG software is that components like sky, sun, fog, water, clouds, lighting is considered separate entities and they do not interact to each other. In real, physical world everything influences everything. Even bigger issue can happen when different components are created by separate teams. It causes issues where one component looks amazing and realistic, but then everything else looks off and disconnected. Then artist's responsibility is to find the issues, tweak the settings, add fake lights and other \"magic\" to connect the pieces back to a nice overall render. At least this has been my workflow for many years and it just felt wrong. so... I developed my own rendering system in GLSL for BGE (Blender Game Engine) with which I made most of my projects. It was made with PBR (Physically Based Rendering) in mind. System was time consuming to adapt to other projects so I started to play around with shader node editor. To my surprise, It was possible to \"translate\" most of it. And with many months of work, I managed to create a first usable version. Then a year later of constant research and optimizations I finally have this addon! Now considering that I developed my old rendering system closely with ocean, clouds, rainbow (!) and weather system, this addon will grow into a considerable mess. This is why I am developing other components simultaneously to be later combined with atmosphere in a sensible way. Why procedural skies? Industry is still using good old HDRI light probe method to do outdoor lighting, and for a good reason - it is the simplest way to simulate realistic lighting conditions, without worrying that it will look wrong. After all it is a 360\u00b0 snapshot of a real environment. HDRI probes unfortunately are not able to capture one crucial aspect - the fact that sky is dynamic. Sky is not just a membrane of the imaginary rim of the sky, it has volume. Sky is atmosphere and atmosphere is a physical medium consisting of a blend of gases. Sky literally starts just outside of your eyeball and extends to the outer space. Sunlight travels through this medium illuminating, scattering and absorbing in it. procedural skies to the rescue! Procedural skies are more common in games industry, and there the industry have developed way past the static HDRIs, skyboxes or skydomes. Just take a look at the amazing sky system for Horizon Zero Dawn During the years I have been working with, probably, every existing atmosphere system, starting from the good old O'Neil's \"Accurate Atmospheric Scattering\" method, to Preetham model, Eric Bruneton's planet rendering, and Hosek-Wilkie's physical sky model. Each of them have their strengths and, unfortunately, also weaknesses. In fact, none of the existing methods proved versatile enough worth my time making an addon for Blender. So I decided to develop a method from (mostly) a scratch - The starlight and skylight system I wish existed! Story of \"Physical Starlight and Atmosphere\" This product is a result of a decade of scouting for ideal sky rendering system. I have been trying out different existing techniques and coming up with mine, but in the end never really settled on one. It must have started with my introduction to GLSL by legendary Mike Pan. I remember bugging him with all kinds of questions. He was, probably one of the first ones who used custom GLSL scripts for Blender. I got hooked and came up with this (I can't believe it has been already 10 years!)","title":"About"},{"location":"#what-is-physical-starlight-and-atmosphere","text":"\"Physical Starlight and Atmosphere\" is a Blender addon for advanced environmental lighting that takes inspiration of 'sandbox' game world and editors like Unity or Unreal Engine. The goal of the addon is to provide high quality atmospherics and lighting and bring visual consistency between every object in your scene. As of now it is still in active development and I am working hard to make it the highest quality product.","title":"What is Physical Starlight and Atmosphere"},{"location":"#why-use-it","text":"very high dynamic range. Made to be used with tone mapping (filmic, or aces) made for PBR and HDR workflow consistent results - sunlight, sky and fog share the same shaders, code and parameters very memory efficient, does not consume video memory - works great on integrated GPUs performance - loads much quicker and renders faster than HDRI textures flexibility - simulate any planetary weather conditions fully procedural - can simulate unlimited number of sky conditions instant results - one click away to a beautiful render it's yours - free to dissect the setup, re-arrange it for your needs","title":"Why use it?"},{"location":"#how-does-it-work","text":"This addon \"fills\" your Blender scene with air (or any gas of your liking) where density at the ground level is the highest and in the space - lowest, then a Star of your choice illuminates the air using physics laws - easy as that! Lighting is calculated based on Rayleigh and Mie theory of light scattering through gaseous and liquid medium. Most critical part of the calculation is the fog - like in real world, it changes based on altitude of observer. Although my work is based on physical functions and scientific research, my usual approach is to stick with what looks right. That's why there are some 'artistic' liberties taken (or manually fitted values based on reference images) to make it stand out from the crowd.","title":"How does it work?"},{"location":"#motivation","text":"Outdoor lighting in is essential in computer graphics and Blender still has no proper skylight system available. Preetham and Hosek-Wilkie sky included in Blender is very rudimentary and practically unusable. Even skylight systems in other software suites are very limited. A common practice in almost all of CG software is that components like sky, sun, fog, water, clouds, lighting is considered separate entities and they do not interact to each other. In real, physical world everything influences everything. Even bigger issue can happen when different components are created by separate teams. It causes issues where one component looks amazing and realistic, but then everything else looks off and disconnected. Then artist's responsibility is to find the issues, tweak the settings, add fake lights and other \"magic\" to connect the pieces back to a nice overall render. At least this has been my workflow for many years and it just felt wrong. so... I developed my own rendering system in GLSL for BGE (Blender Game Engine) with which I made most of my projects. It was made with PBR (Physically Based Rendering) in mind. System was time consuming to adapt to other projects so I started to play around with shader node editor. To my surprise, It was possible to \"translate\" most of it. And with many months of work, I managed to create a first usable version. Then a year later of constant research and optimizations I finally have this addon! Now considering that I developed my old rendering system closely with ocean, clouds, rainbow (!) and weather system, this addon will grow into a considerable mess. This is why I am developing other components simultaneously to be later combined with atmosphere in a sensible way.","title":"Motivation"},{"location":"#why-procedural-skies","text":"Industry is still using good old HDRI light probe method to do outdoor lighting, and for a good reason - it is the simplest way to simulate realistic lighting conditions, without worrying that it will look wrong. After all it is a 360\u00b0 snapshot of a real environment. HDRI probes unfortunately are not able to capture one crucial aspect - the fact that sky is dynamic. Sky is not just a membrane of the imaginary rim of the sky, it has volume. Sky is atmosphere and atmosphere is a physical medium consisting of a blend of gases. Sky literally starts just outside of your eyeball and extends to the outer space. Sunlight travels through this medium illuminating, scattering and absorbing in it. procedural skies to the rescue! Procedural skies are more common in games industry, and there the industry have developed way past the static HDRIs, skyboxes or skydomes. Just take a look at the amazing sky system for Horizon Zero Dawn During the years I have been working with, probably, every existing atmosphere system, starting from the good old O'Neil's \"Accurate Atmospheric Scattering\" method, to Preetham model, Eric Bruneton's planet rendering, and Hosek-Wilkie's physical sky model. Each of them have their strengths and, unfortunately, also weaknesses. In fact, none of the existing methods proved versatile enough worth my time making an addon for Blender. So I decided to develop a method from (mostly) a scratch - The starlight and skylight system I wish existed!","title":"Why procedural skies?"},{"location":"#story-of-physical-starlight-and-atmosphere","text":"This product is a result of a decade of scouting for ideal sky rendering system. I have been trying out different existing techniques and coming up with mine, but in the end never really settled on one. It must have started with my introduction to GLSL by legendary Mike Pan. I remember bugging him with all kinds of questions. He was, probably one of the first ones who used custom GLSL scripts for Blender. I got hooked and came up with this (I can't believe it has been already 10 years!)","title":"Story of \"Physical Starlight and Atmosphere\""},{"location":"contact/","text":"directly: martins@rigainnovationgroup.com or drop a message in the forums, others might help you too: BlenderArtists thread","title":"Contact"},{"location":"faq/","text":"Why is this a paid add-on?","title":"FAQ"},{"location":"faq/#why-is-this-a-paid-add-on","text":"","title":"Why is this a paid add-on?"},{"location":"features/","text":"Feature List accurate Sun radiance model based on blackbody radiance theory accurate mathematical atmosphere model based on Rayleigh and Mie scattering theory Earth shadow (belt of Venus) unlocked viewer position - simulate conditions at any altitude (experimental) variable Sun radius, temperature and intensity variable atmosphere altitude and density physical stars Upcoming Features round planet physical celestial objects (3D planets and Moon) physical suns (actual 3D Star) clouds \"reset default values\" button presets system choose your skymap in UI \"Sun-position\" addon support include simple Sun position script accurate radiance intensities bake to HDRI button make Sun radiance intensity same when changing sun diameter","title":"Features"},{"location":"features/#feature-list","text":"accurate Sun radiance model based on blackbody radiance theory accurate mathematical atmosphere model based on Rayleigh and Mie scattering theory Earth shadow (belt of Venus) unlocked viewer position - simulate conditions at any altitude (experimental) variable Sun radius, temperature and intensity variable atmosphere altitude and density physical stars","title":"Feature List"},{"location":"features/#upcoming-features","text":"round planet physical celestial objects (3D planets and Moon) physical suns (actual 3D Star) clouds \"reset default values\" button presets system choose your skymap in UI \"Sun-position\" addon support include simple Sun position script accurate radiance intensities bake to HDRI button make Sun radiance intensity same when changing sun diameter","title":"Upcoming Features"},{"location":"fog/","text":"How to add Fog? The \"SkylightAtmosphere\" is a universal node, it also works on object materials. All you need to do is to add the node group in your Object Shader Node tree just before the Material Output. NOTE: right now adding the fog to your materials is completely manual. In next releases I'll automate the process of adding and removing the fog. Here is how: Select your object and material you would like to add the fog to. Open the Shader Node Editor. Select Add/Group/StarlightAtmosphere and insert just before Material Output of your shader, like shown in the image. It will connect the \"sockets\" automatically. Now you have fog! Change the Atmosphere parameters to see the immediate results. \"Atmosphere Density\", \"Distance Scalar\" and \"Falloff\" has the most apparent impact on the fog.","title":"Fog"},{"location":"fog/#how-to-add-fog","text":"The \"SkylightAtmosphere\" is a universal node, it also works on object materials. All you need to do is to add the node group in your Object Shader Node tree just before the Material Output. NOTE: right now adding the fog to your materials is completely manual. In next releases I'll automate the process of adding and removing the fog. Here is how: Select your object and material you would like to add the fog to. Open the Shader Node Editor. Select Add/Group/StarlightAtmosphere and insert just before Material Output of your shader, like shown in the image. It will connect the \"sockets\" automatically. Now you have fog! Change the Atmosphere parameters to see the immediate results. \"Atmosphere Density\", \"Distance Scalar\" and \"Falloff\" has the most apparent impact on the fog.","title":"How to add Fog?"},{"location":"gallery/","text":"Empty","title":"Showcase"},{"location":"gallery/#empty","text":"","title":"Empty"},{"location":"installation/","text":"Requirements Blender 2.8+ Physical Starlight and Atmosphere installation instructions \"Physical Starlight and Atmopshere\" is only available for purchase on Blendermarket or Gumroad . 1. Download the \"physicalStarlightAtmosphere.zip\" file. To make sure you have the latest .zip, check it here: Blendermarket / Gumroad 2a. If you are installing it for the first time: Open Blender. Go to Edit/Preferences. Choose \"Add-ons\" tab and press \"Install...\" button. Locate the .zip file and press \"Install Add-on\". You will see the newly installed add-on, enable it by checking the checkbox. Wait till it registers. Voila! 2b. If you are updating to a newer add-on version (or the method above did not work): I recommend removing previous version of the addon. For now this is the only option I can assure that addon will work properly. To do that: Go to the Blender addons location: Windows 7 / 10 C:\\Users\\{username}\\AppData\\Roaming\\Blender Foundation\\Blender\\2.XX\\scripts\\addons Mac From Finder in the Go dropdown holding Command key will expand and show Library where you can access the local data of Blender. /Users/{username}/Library/Application Support/Blender/2.XX/scripts/addons Linux: ~/.config/blender/2.XX/scripts/addons Remove \"physicalStarlightAtmosphere\" folder. Then do the normal Blender addon installation (2a.) or Copy the contents of the .zip to the /scripts/addons directory Open Blender and enable the add-on. (Edit/Preferences/Add-ons/ search for \"atmosphere\" - tick the checkbox) Installation Troubleshooting \"Physical Starlight and Atmosphere\" is not installing! Please remove the old addon folder before installing a new version. (see 2b.) Do not try to install it on the Blender install directory itself. example - C:\\ProgramFiles\\Blender Foundation\\Blender\\2.80\\scripts\\addons - NOT HERE (see 2b.) On Macs, browser (or Finder?) sometimes automatically unzips .zip files. You need to install the .zip file! \"Physical Starlight and Atmosphere\" won't enable! Try reopening Blender. Check installation. \"Physical Starlight and Atmosphere\" only works with Blender 2.8 and above.","title":"Installation"},{"location":"installation/#requirements","text":"Blender 2.8+","title":"Requirements"},{"location":"installation/#physical-starlight-and-atmosphere-installation-instructions","text":"\"Physical Starlight and Atmopshere\" is only available for purchase on Blendermarket or Gumroad . 1. Download the \"physicalStarlightAtmosphere.zip\" file. To make sure you have the latest .zip, check it here: Blendermarket / Gumroad 2a. If you are installing it for the first time: Open Blender. Go to Edit/Preferences. Choose \"Add-ons\" tab and press \"Install...\" button. Locate the .zip file and press \"Install Add-on\". You will see the newly installed add-on, enable it by checking the checkbox. Wait till it registers. Voila! 2b. If you are updating to a newer add-on version (or the method above did not work): I recommend removing previous version of the addon. For now this is the only option I can assure that addon will work properly. To do that: Go to the Blender addons location: Windows 7 / 10 C:\\Users\\{username}\\AppData\\Roaming\\Blender Foundation\\Blender\\2.XX\\scripts\\addons Mac From Finder in the Go dropdown holding Command key will expand and show Library where you can access the local data of Blender. /Users/{username}/Library/Application Support/Blender/2.XX/scripts/addons Linux: ~/.config/blender/2.XX/scripts/addons Remove \"physicalStarlightAtmosphere\" folder. Then do the normal Blender addon installation (2a.) or Copy the contents of the .zip to the /scripts/addons directory Open Blender and enable the add-on. (Edit/Preferences/Add-ons/ search for \"atmosphere\" - tick the checkbox)","title":"Physical Starlight and Atmosphere installation instructions"},{"location":"installation/#installation-troubleshooting","text":"\"Physical Starlight and Atmosphere\" is not installing! Please remove the old addon folder before installing a new version. (see 2b.) Do not try to install it on the Blender install directory itself. example - C:\\ProgramFiles\\Blender Foundation\\Blender\\2.80\\scripts\\addons - NOT HERE (see 2b.) On Macs, browser (or Finder?) sometimes automatically unzips .zip files. You need to install the .zip file! \"Physical Starlight and Atmosphere\" won't enable! Try reopening Blender. Check installation. \"Physical Starlight and Atmosphere\" only works with Blender 2.8 and above.","title":"Installation Troubleshooting"},{"location":"interface/","text":"Part 1: Getting started Once installation is complete, you are set! The \"Physical Atmosphere\" tab is now in the sidebar of Blender 3D viewport (\"N\" key) Click on the \"Physical Atmosphere\" tab and you'll see this: Now enable it by ticking the uppermost checkbox \"Atmosphere\". To see the sky, you have to be in \"Rendered\" Viewport Shading mode (click on the 4th sphere in the list up in the right corner of 3D viewport) Now before we move on, I'll explain what the addon just did by pressing the checkbox. It replaced the default world shader node with \"StarlightAtmosphere\" node. When you grey out the \"Atmosphere\" checkbox, it will again set it back to default world. It added a Sun lamp. The Sun lamp is used as the main light source to cast shadows from the Sun. When you grey out the \"Atmosphere\" checkbox, it will remove the Sun. You are now greeted by this list of variables to play with. Take a deep breath and have a look at those. It has fancy names like Kelvins, radiance, and absorption, but I use those to somehow standartize the variables. Other softwares and scientific tools use similar naming. Also, few of these will be soon replaced with more artist-friendly variables. TIP: hover your mouse cursor over the variables and press Delete to reset the value to its default Part 2: Sun Sun is controlled by these 7 variables: Sun Azimuth Sun Elevation Sun Disk checkbox Sun Lamp checkbox Sun Angular Diameter Sun Temperature K Sun Radiance Intensity Sun Position Sun position in the sky is controlled by the first two variables - Azimuth and Elevation. Azimuth moves the Sun horizontally, elevation - vertically. The values are angle in degrees. Default is 0.0 and 0.0 which puts the sun exactly at horizon in +Y direction. For now this is the only proper option how to change the Sun position. NOTE: in next releases it'll allow user to move the Sun lamp and thus change the shader parameters in two-way manner. Also I'll add the support for Sun-Position addon and Sun Visibility Now the next two parameters might seem confusing for some. Sun Disk checkbox, toggles the visibility of the sun disk in the sky. Sun Lamp checkbox, toggles the Sun Lamp intensity. I'll explain why these parameters can be useful. There are few specific cases where you don't want to see the Sun disk visible in the sky or don't want your scene illuminated by a parametric lamp. For example if you use Cycles, you can avoid using a parametric Sun Lamp and use the addon as HDRI. By disabling both, you get illumination by the sky only. No direct light. Sun disk enabled and Sun Lamp disabled, you essentially get a HDRI. Switch to Cycles and you will see how the Sun Disk is a light source - you get shadows. Sun disk disabled and Sun Lamp enabled, you have shadows and direct light, but the sun disk will not be visible in the sky. (can't think of a useful case for this setting) Both enabled - you have both, direct light and sun disk in the sky. If you compare Cycles renders with Sun Lamp enabled and Sun Lamp disabled, there might not be a visual difference. In Eevee you will see huge difference in lighting and with no parametric light source there will be no shadows. This is because Cycles will sample every point in the sky as a \"light source\" and you will see shadows, while Eevee only approximates the lighting and uses the sky as a \"irradiance map\". Sun Disk Sun disk size in the sky is controlled by \"Angular Diameter\" parameter. It also changes the Sun Lamp Angle value for soft shadows. Larger the value, bigger the Sun disk, brighter it gets. NOTE: Right now the Sun disk is a 2D circle with parametric apparent diameter, intensity is multiplied with a limb darkening factor. In future releases Sun will be calculated differently - as a real 3D sphere with actual physical diameter placed reeealy far away, but not at infinity, which will actually allow to travel to the Sun \"Temperature K\" changes the color of the Sun disk. Bigger the value, bluer the Sun. In theory small Stars are hotter, thus bluer, and big stars colder - redder. I wanted to include the calculation of that, but it would remove artistic control, so left it as a manual variable. NOTE: In the future this will just be a RGB color picker instead \"Intensity\" changes the Sun radiance intensity. In reality the value is much larger. I need more research in this matter.","title":"User Interface"},{"location":"interface/#part-1-getting-started","text":"Once installation is complete, you are set! The \"Physical Atmosphere\" tab is now in the sidebar of Blender 3D viewport (\"N\" key) Click on the \"Physical Atmosphere\" tab and you'll see this: Now enable it by ticking the uppermost checkbox \"Atmosphere\". To see the sky, you have to be in \"Rendered\" Viewport Shading mode (click on the 4th sphere in the list up in the right corner of 3D viewport) Now before we move on, I'll explain what the addon just did by pressing the checkbox. It replaced the default world shader node with \"StarlightAtmosphere\" node. When you grey out the \"Atmosphere\" checkbox, it will again set it back to default world. It added a Sun lamp. The Sun lamp is used as the main light source to cast shadows from the Sun. When you grey out the \"Atmosphere\" checkbox, it will remove the Sun. You are now greeted by this list of variables to play with. Take a deep breath and have a look at those. It has fancy names like Kelvins, radiance, and absorption, but I use those to somehow standartize the variables. Other softwares and scientific tools use similar naming. Also, few of these will be soon replaced with more artist-friendly variables. TIP: hover your mouse cursor over the variables and press Delete to reset the value to its default","title":"Part 1: Getting started"},{"location":"interface/#part-2-sun","text":"Sun is controlled by these 7 variables: Sun Azimuth Sun Elevation Sun Disk checkbox Sun Lamp checkbox Sun Angular Diameter Sun Temperature K Sun Radiance Intensity","title":"Part 2: Sun"},{"location":"interface/#sun-position","text":"Sun position in the sky is controlled by the first two variables - Azimuth and Elevation. Azimuth moves the Sun horizontally, elevation - vertically. The values are angle in degrees. Default is 0.0 and 0.0 which puts the sun exactly at horizon in +Y direction. For now this is the only proper option how to change the Sun position. NOTE: in next releases it'll allow user to move the Sun lamp and thus change the shader parameters in two-way manner. Also I'll add the support for Sun-Position addon and","title":"Sun Position"},{"location":"interface/#sun-visibility","text":"Now the next two parameters might seem confusing for some. Sun Disk checkbox, toggles the visibility of the sun disk in the sky. Sun Lamp checkbox, toggles the Sun Lamp intensity. I'll explain why these parameters can be useful. There are few specific cases where you don't want to see the Sun disk visible in the sky or don't want your scene illuminated by a parametric lamp. For example if you use Cycles, you can avoid using a parametric Sun Lamp and use the addon as HDRI. By disabling both, you get illumination by the sky only. No direct light. Sun disk enabled and Sun Lamp disabled, you essentially get a HDRI. Switch to Cycles and you will see how the Sun Disk is a light source - you get shadows. Sun disk disabled and Sun Lamp enabled, you have shadows and direct light, but the sun disk will not be visible in the sky. (can't think of a useful case for this setting) Both enabled - you have both, direct light and sun disk in the sky. If you compare Cycles renders with Sun Lamp enabled and Sun Lamp disabled, there might not be a visual difference. In Eevee you will see huge difference in lighting and with no parametric light source there will be no shadows. This is because Cycles will sample every point in the sky as a \"light source\" and you will see shadows, while Eevee only approximates the lighting and uses the sky as a \"irradiance map\".","title":"Sun Visibility"},{"location":"interface/#sun-disk","text":"Sun disk size in the sky is controlled by \"Angular Diameter\" parameter. It also changes the Sun Lamp Angle value for soft shadows. Larger the value, bigger the Sun disk, brighter it gets. NOTE: Right now the Sun disk is a 2D circle with parametric apparent diameter, intensity is multiplied with a limb darkening factor. In future releases Sun will be calculated differently - as a real 3D sphere with actual physical diameter placed reeealy far away, but not at infinity, which will actually allow to travel to the Sun \"Temperature K\" changes the color of the Sun disk. Bigger the value, bluer the Sun. In theory small Stars are hotter, thus bluer, and big stars colder - redder. I wanted to include the calculation of that, but it would remove artistic control, so left it as a manual variable. NOTE: In the future this will just be a RGB color picker instead \"Intensity\" changes the Sun radiance intensity. In reality the value is much larger. I need more research in this matter.","title":"Sun Disk"},{"location":"issues/","text":"Issues List Blender crashes when rendering a video renderfarm issues invert absorption move the Atmopshere from Sidebar to World tab Fixed Issues fogging does not work in Cycles. (fixed in v1.1) reflections do not work in Eevee when using fog. (fixed in v1.1) Sun radius work differently on Intel and Iris GPUs. Makes the sky completely white. (will be included in next release)","title":"Known Issues"},{"location":"issues/#issues-list","text":"Blender crashes when rendering a video renderfarm issues invert absorption move the Atmopshere from Sidebar to World tab","title":"Issues List"},{"location":"issues/#fixed-issues","text":"fogging does not work in Cycles. (fixed in v1.1) reflections do not work in Eevee when using fog. (fixed in v1.1) Sun radius work differently on Intel and Iris GPUs. Makes the sky completely white. (will be included in next release)","title":"Fixed Issues"}]}